#include <iostream>
#include <cstring>
#include <winbgim.h>
#include <graphics.h>
#include <stdio.h>
#include <cmath>
#include <bits/stdc++.h>
#include <string>
using namespace std;

struct nodArb {
    char info[256];
    int h,w;
     nodArb* stg;
     nodArb* drp;
     nodArb* urm;
};
nodArb *head=NULL;

struct zona{
    int stg,drp,sus,jos;
};

char caractere[]="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
char cifre[]="0123456789";
char operatii1[]="+-";
char operatii2[]="*/^";

double adunare(double x,double y)///pt evaluarea expresiei
{
    double r=x+y;
    return r;
}

double scadere(double x,double y)
{
    double r=x-y;
    return r;
}

double inmultire(double x,double y)
{
    double r=x*y;
    return r;
}

double impartire(double x,double y)
{
    double r=x/y;
    return r;
}

double putere(double x,double y)
{
    double r=pow(x,y);
    if(x==0) return 0;
    if(y==0) return 1;
    return r;
}

nodArb* nodNou(char info[])
{
    nodArb *nod = new nodArb;
    strcpy(nod->info,info);
    nod->stg=NULL;
    nod->drp=NULL;
    nod->urm=NULL;
    return nod;
}

void printinOrdine(nodArb* nodArb)
{
    if (nodArb==NULL)
        return;
    else
    {
    printinOrdine(nodArb->stg);
    cout<<nodArb->info<<" ";
    printinOrdine(nodArb->drp);
    }
}

void printpreOrdine(nodArb* nodArb)
{
    if (nodArb==NULL)
        return;
    else
    {
    cout<<nodArb->info<<" ";
    printpreOrdine(nodArb->stg);
    printpreOrdine(nodArb->drp);
    }
}


void pushh(nodArb* x)
{
    if(head==NULL)
        head=x;
    else
    {
        x->urm=head;
        head=x;
    }
}

nodArb* popp()
{
    nodArb *p=head;
    head=head->urm;
    return p;
}


void CitesteSir(int x, int y, char mesaj[256], char S[256] )
{
    setbkcolor(CYAN);
    char Enter = 13; char BackSpace = 8; char Escape = 27; char s2[2]; s2[1]='\0';
    char MultimeDeCaractereAcceptabile[256]="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+-^*/() ";
    char S_initial[256]; char tasta; char S_[256]; char mesaj_[256];
    strcpy(mesaj_,mesaj);
    strcpy(S_initial,S); settextstyle(BOLD_FONT,HORIZ_DIR,3); setcolor(RED);
    settextjustify(0,0); outtextxy(x,y,mesaj_);
    x=x+textwidth(mesaj);strcpy(S,"");
    strcpy(S_,S); strcat(S_,"_");
    setcolor(CYAN); outtextxy(x,y,S_);
    s2[0]=tasta; strcat(S,s2); strcpy(S_,S); strcat(S_,"_");
    setcolor(WHITE); outtextxy(x,y,S_);

    do {
        tasta=getch();
        if (tasta==0) { tasta=getch();}
        else
            if (strchr(MultimeDeCaractereAcceptabile, tasta))
            {
                strcpy(S_,S); strcat(S_,"_");
                setcolor(CYAN); outtextxy(x,y,S_);
                s2[0]=tasta; strcat(S,s2); strcpy(S_,S); strcat(S_,"_");
                setcolor(WHITE); outtextxy(x,y,S_);
            }
            if (tasta==BackSpace)
                    if ((strcmp(S,"")))
                    {
                        setcolor(CYAN); outtextxy(x,y,S_); setcolor(WHITE);
                        S[strlen(S)-1]='\0'; strcpy(S_,S); strcat(S_,"_") ;
                        outtextxy(x,y,S_);
                    }
    } while (tasta!=Enter && tasta!=Escape);
    if (tasta == Escape) strcpy(S,S_initial);
    setcolor(CYAN); outtextxy(x,y,S_);setcolor(WHITE); outtextxy(x,y,S);
}
queue <string>q,q1,q2;
stack <char>s;
stack <double>e;

int prioritate(char c)
{
    if(c=='(' || c=='[' || c=='{') return 1;
    if(c==')' || c==']' || c=='}') return 2;
    else if(c=='+' || c=='-') return 3;
    else if(c=='*' || c=='/') return 4;
    else if(c=='^') return 5;
    else return 6;
}
void postFix(char exp[],queue<string> &q)
{
    int i=0,vb;
    while(exp[i]!='\0')
    {
        char subexp[256];
        int k=0;
        if(isalnum(exp[i]))
        {
            while(isalnum(exp[i]))
            {
                subexp[k]=exp[i];
                k++;
                i++;
            }
            subexp[k]='\0';
            vb=1;
        }
        else
        {
            subexp[k]=exp[i];
            subexp[k+1]='\0';
            i++;
            vb=0;
        }
        if(vb==1)
        {
            q.push(subexp);
        }
        else if(vb==0)
        {
            if(subexp[k]=='(')
                s.push(subexp[k]);
            else if(subexp[k]==')')
            {
                while(s.top()!='(')
                {
                    q.push(string(1,s.top()));
                    s.pop();
                }
                s.pop();
            }
            else
            {
                while(prioritate(s.top())>prioritate(subexp[k]))
                {
                    q.push(string(1,s.top()));
                    s.pop();
                }
                s.push(subexp[k]);
            }
        }
    }
    while(!s.empty())
    {
        q.push(string(1,(s.top())));
        s.pop();
    }
}

int verifExpr(char x[],int lung)
{
    int cnt=0,cnt2=0,ok=1;
    for(int i=0;i<lung;i++)
    {
        if(strchr("!@#$%&'><?;:.,\[]{}|=",x[i])!=0)
        {
            ok=0;
            break;
        }
        if(x[i]=='(')///verificam nr de paranteze
            cnt++;
        if(x[i]==')')
            cnt2++;
        if((x[i]=='(' && x[i+1]==')') || (x[i]=='(' && strchr(operatii2,x[i+1])!=0) || (x[i]=='(' && strchr(operatii1,x[i+1])!=0))
        {
            ok=0;///cazurile () (* (/
            break;
        }
        if(((strchr(caractere,x[i])!=0) && x[i-1]==')') || ((strchr(cifre,x[i])!=0) && x[i-1]==')') || ((x[i]=='(' && x[i-1]==')')))
        {
             ok=0;/// cazurile )( )a )6
             break;
        }
        if(((strchr(caractere,x[i])!=0) && (strchr(caractere,x[i+1])!=0)) || ((strchr(caractere,x[i])!=0) && (strchr(cifre,x[i+1])!=0)) || ((strchr(caractere,x[i])!=0) && x[i+1]=='('))
        {
            ok=0;///cazurile aa a5 a(
            break;
        }
        if(((strchr(cifre,x[i])!=0) && (strchr(caractere,x[i+1])!=0)) || ((strchr(cifre,x[i])!=0) && x[i+1]=='('))
        {
            ok=0;///cazurile 5a 5(
            break;
        }
        if(((strchr(operatii2,x[i])!=0) && (strchr(operatii2,x[i+1])!=0)) || ((strchr(operatii2,x[i])!=0) && x[i+1]==')') || ((strchr(operatii2,x[i])!=0) && (strchr(operatii1,x[i+1])!=0)))
        {
             ok=0;/// cazurile *+ */ ** *)
             break;
        }
        if(((strchr(operatii1,x[i])!=0) && (strchr(operatii2,x[i+1])!=0)) || ((strchr(operatii1,x[i])!=0) && x[i+1]==')') || ((strchr(operatii1,x[i])!=0) && (strchr(operatii1,x[i+1])!=0)))
        {
             ok=0;/// cazurile +* +)
             break;
        }
    }
    if(cnt!=cnt2)
        ok=0;
    if(ok==0)
        return 0;
    else return 1;

}

void creareArb(queue <string> q)
{
   nodArb *x,*y,*z;
   char f[256];
   while(!q.empty())
   {
       strcpy(f,q.front().c_str());
       if (f[0]=='+' || f[0]=='-' || f[0]=='*' || f[0]=='/' || f[0]=='^')
        {
            z=nodNou(f);
            x=popp();
            y=popp();
            z->stg=y;
            z->drp=x;
            pushh(z);
            q.pop();
        }
       else
        {
            z=nodNou(f);
            pushh(z);
            q.pop();
        }
   }
}

int height(nodArb* nodArb)
{
    int l=0;
    int r=0;
    if(nodArb==NULL)
        return 0;
    l=height(nodArb->stg);
    r=height(nodArb->drp);
    if(l>=r)
        return l+1;
    else return r+1;
}
void deseneaza(nodArb *r, zona z, int zoom)
{
    zona z1,z2;
    if(isalnum(r->info[0]))
    {
        settextstyle(SIMPLEX_FONT,HORIZ_DIR,zoom);
        outtextxy((z.stg+z.drp)/2-18,(z.jos+z.sus)/2-18,r->info);
    }
    if(r->info[0]=='/')
    {
        z1.drp=z.drp,z1.stg=z.stg,z1.sus=z.sus,z1.jos=(z.jos+z.sus)/2-18;
        z2.drp=z.drp,z2.stg=z.stg,z2.sus=(z.sus+z.jos)/2+18,z2.jos=z.jos;
        line(z.stg+40,(z.sus+z.jos)/2,z.drp-40,(z.jos+z.sus)/2);
        deseneaza(r->stg,z1,zoom);///desenam subarb. stang in partea de sus cu font mai mic
        deseneaza(r->drp,z2,zoom);/// desenam subarb. drept in partea de jos cu font mai mic
    }
    if(r->info[0]=='*') ///.....
        {
        z1.drp=(z.stg+z.drp)/2-18,z1.stg=z.stg,z1.sus=z.sus,z1.jos=z.jos;
        z2.drp=z.drp,z2.stg=(z.stg+z.drp)/2+18,z2.sus=z.sus,z2.jos=z.jos;
        outtextxy((z.stg+z.drp)/2-18,(z.sus+z.jos)/2-30,".");
        deseneaza(r->stg,z1,zoom);///desenam subarb. stang in partea stanga cu font mai mic
        deseneaza(r->drp,z2,zoom);/// desenam subarb. drept in partea dreapta cu font mai mic
        }
    if(r->info[0]=='+')  ///.....
        {
        z1.drp=(z.stg+z.drp)/2-18,z1.stg=z.stg,z1.sus=z.sus,z1.jos=z.jos;
        z2.drp=z.drp,z2.stg=(z.stg+z.drp)/2+18,z2.sus=z.sus,z2.jos=z.jos;
        outtextxy((z.stg+z.drp)/2-18,(z.sus+z.jos)/2-18,"+");
        deseneaza(r->stg,z1,zoom);///desenam subarb. stang in partea stanga cu font mai mic
        deseneaza(r->drp,z2,zoom);/// desenam subarb. drept in partea dreapta cu font mai mic
        }
    if(r->info[0]=='-') ///.....
       {
        z1.drp=(z.stg+z.drp)/2-18,z1.stg=z.stg,z1.sus=z.sus,z1.jos=z.jos;
        z2.drp=z.drp,z2.stg=(z.stg+z.drp)/2+18,z2.sus=z.sus,z2.jos=z.jos;
        outtextxy((z.stg+z.drp)/2-18,(z.sus+z.jos)/2-18,"-");
        deseneaza(r->stg,z1,zoom);///desenam subarb. stang in partea stanga cu font mai mic
        deseneaza(r->drp,z2,zoom);/// desenam subarb. drept in partea dreapta cu font mai mic
        }
    if(r->info[0]=='^') ///.....
       {
        z1.drp=(z.drp+z.stg)*3/4,z1.stg=(z.stg+z.drp)/4,z1.sus=(z.sus+z.jos)/4,z1.jos=(z.jos+z.sus)*3/4;
        z2.drp=(z.drp+z.stg)*3/4+textwidth((r->drp)->info),z2.stg=(z.stg+z.drp)/4+textwidth((r->drp)->info),z2.sus=(z.sus+z.jos)/4-textheight((r->drp)->info)/2,z2.jos=(z.jos+z.sus)*3/4-textheight((r->drp)->info)/2;
        settextstyle(SIMPLEX_FONT,HORIZ_DIR,zoom);
        deseneaza(r->stg,z1,zoom);///desenam subarb. stang in partea de sus cu font mai mic
        deseneaza(r->drp,z2,zoom);/// desenam subarb. drept in partea de jos cu font mai mic
        }
}

int main()
{
   zona z;
   z.drp=1000;
   z.stg=200;
   z.sus=200;
   z.jos=600;
   int zoom=4,h[256],d,n=0;
   char s[256]="",s2[256],mesaj[256];
   char v[256];
   int lung_expr=0;
   initwindow(1000,400,"Citire expresie",100,200); ///
   setfillstyle(SOLID_FILL,CYAN);
   floodfill(100,100,CYAN);
   settextstyle(SANS_SERIF_FONT,HORIZ_DIR,3);
   setcolor(BLACK);
   setbkcolor(WHITE);
   outtextxy(100,210,"Introduceti expresia pe care doriti sa o afisati si apasati tasta enter.");
   outtextxy(100,250,"Programul va afisa grafic expresia introdusa.");
   settextstyle(SANS_SERIF_FONT,HORIZ_DIR,6);
   strcpy(mesaj,"Expresie: ");
   CitesteSir(100,100,mesaj,s);
   v[0]='(';
   for(int i=0;i<strlen(s);i++)
   {
        v[i+1]=s[i];
        lung_expr++;
   }
   lung_expr=lung_expr+2;///prima si ultima paranteza
   v[lung_expr-1]=')';///lungimea cu tot cu noile paranteze
   v[lung_expr]=NULL;
   if(verifExpr(v,lung_expr)==0)
   {
       cout<<"Eroare: expresie scrisa incorect!"<<endl;
       return 0;
   }
   postFix(v,q);
   creareArb(q);
   q1=q;
   while(!q1.empty())
   {
       char w[256];
       strcpy(w,q1.front().c_str());
       if(isalpha(w[0]))
          {
              cout<<w[0]<<"=";
              cin>>d;
              h[n]=d;
              n++;
          }
        q1.pop();
   }
   cout<<'\n';
   int i=0;
   while(!q.empty())
   {
       char w[256];
       strcpy(w,q.front().c_str());
       if(isalpha(w[0]))
       {
           int b=h[i];
           stringstream u;
           u<<b;
           string z=u.str();
           q2.push(z);
           i++;
           q.pop();
       }
       else
       {
            q2.push(q.front());
            q.pop();
       }
   }
   while(!q2.empty())
   {
       char w[256];
       strcpy(w,q2.front().c_str());
       if(isdigit(w[0]))
       {

           double g=atof(w);
           e.push(g);
           q2.pop();
       }
       else
       {
           double top1,top2,p;
           top1=e.top();
           e.pop();
           top2=e.top();
           e.pop();
           if(w[0]=='+')
           {
               p=adunare(top1,top2);
           }
           if(w[0]=='-')
           {
               p=scadere(top2,top1);
           }
           if(w[0]=='*')
           {
               p=inmultire(top1,top2);
           }
           if(w[0]=='/')
           {
               p=impartire(top2,top1);
           }
           if(w[0]=='^')
           {
               p=putere(top2,top1);
           }
           e.push(p);
           q2.pop();
       }
   }
   cout<<"Rezultatul este"<<"="<<e.top();
   initwindow(1200,800,"Expresie matematica");
   setfillstyle(SOLID_FILL,CYAN);
   floodfill(100,100,CYAN);
   setfillstyle(SOLID_FILL,WHITE);
   settextstyle(BOLD_FONT,HORIZ_DIR,5); ///
   setcolor(RED);
   setbkcolor(CYAN);
   outtextxy(370,150,"EXPRESIA MATEMATICA");
   bar(20,200,1180,750);
   setcolor(BLACK);
   setbkcolor(WHITE);
   settextstyle(SIMPLEX_FONT,HORIZ_DIR,5);
   deseneaza(head,z,zoom);///
   getch();
   return 0;
}
